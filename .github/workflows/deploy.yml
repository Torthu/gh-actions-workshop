# Workflow names are optional, but should be provided.
# They are displayed on GitHub when the action is run.
name: Deploy to GitHub Pages ✨

# The `on` property configures the events that will trigger the workflow.
# In our case we want it to run when the `pull_request` event is triggered.
# In short, that means that the workflow will run when a pull request is
# either opened or updated (but not renamed or labeled – code needs to
# be changed).
on:
  push:
    # We can also specify branches. This workflow will only run when the
    # `push` event is triggered on the `main` branch.
    branches:
      - main
    

# Jobs are what actually do the work. We can add as many jobs as we want.
# These will be run in parallel.
jobs:
  build:
    # As with workflow names (and even step names), job names are not
    # strictly required, but they are good practice.
    name: Deploy

    # Permissions are required to be able to read the repository and
    # deploy to GitHub Pages.
    permissions:
      contents: read
      pages: write
      id-token: write

    # There are many virtual machines we can run our jobs on. The most
    # common one is `ubuntu-latest`. See this page for a full list of
    # officially supported runners: https://github.com/actions/runner-images
    runs-on: ubuntu-latest

    # Each job can have multiple steps. These will be run in sequence.
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the `dist` folder, which was generated by `npm run build`
          path: "./dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4